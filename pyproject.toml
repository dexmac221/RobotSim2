[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "robot-sim-py"
version = "0.1.0"
description = "Modern Python reboot of the RobotSim 6-DOF manipulator simulator"
readme = "README.md"
authors = [{"name" = "RobotSim Maintainers"}]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.24",
    "matplotlib>=3.8",
    "PyOpenGL>=3.1",
    "glfw>=2.6",
    "pillow>=10.4",
    "google-genai>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7",
    "black>=23.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
]

[project.scripts]
robot-sim-demo = "robot_sim_py.app:main"
robot-sim-ogl = "robot_sim_py.ogl_app:main"
robot-sim-gemini-image-test = "robot_sim_py.gemini_image_test:main"

[tool.setuptools.packages.find]
include = ["robot_sim_py*"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | python
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "python",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex (we'll handle manually)
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
exclude = [
    "python/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "glfw",
    "OpenGL.*",
    "PIL.*",
    "matplotlib.*",
    "google.*",
]
ignore_missing_imports = true
